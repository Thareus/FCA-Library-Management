services:
  redis:
    image: redis:alpine
    container_name: library_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  backend:
    container_name: library_backend
    build: 
      context: .
      dockerfile: docker/backend/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./library:/app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=library.settings
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      - redis

  celery:
    container_name: library_celery
    build: 
      context: .
      dockerfile: docker/backend/Dockerfile
    command: celery -A library worker -l info -P gevent --concurrency=4
    volumes:
      - ./library:/app
    environment:
      - DJANGO_SETTINGS_MODULE=library.settings
      - PYTHONPATH=/app
      - C_FORCE_ROOT=1
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - backend

  frontend:
    container_name: library_frontend
    build: 
      context: .
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=1
    depends_on:
      - backend
    stdin_open: true
    tty: true

volumes:
  redis_data: